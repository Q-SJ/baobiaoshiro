/**
 * This class is generated by jOOQ
 */
package com.iot.baobiao.jooq.tables;


import com.iot.baobiao.converter.TimestampToLocalDateTimeConverter;
import com.iot.baobiao.jooq.Keys;
import com.iot.baobiao.jooq.Nutch;
import com.iot.baobiao.jooq.tables.records.UserSmsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserSms extends TableImpl<UserSmsRecord> {

    private static final long serialVersionUID = 2116141628;

    /**
     * The reference instance of <code>nutch.user_sms</code>
     */
    public static final UserSms USER_SMS = new UserSms();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserSmsRecord> getRecordType() {
        return UserSmsRecord.class;
    }

    /**
     * The column <code>nutch.user_sms.id</code>.
     */
    public final TableField<UserSmsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>nutch.user_sms.phonenum</code>.
     */
    public final TableField<UserSmsRecord, String> PHONENUM = createField("phonenum", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>nutch.user_sms.smscode</code>.
     */
    public final TableField<UserSmsRecord, String> SMSCODE = createField("smscode", org.jooq.impl.SQLDataType.VARCHAR.length(64).nullable(false), this, "");

    /**
     * The column <code>nutch.user_sms.state</code>.
     */
    public final TableField<UserSmsRecord, Integer> STATE = createField("state", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>nutch.user_sms.send_time</code>.
     */
    public final TableField<UserSmsRecord, LocalDateTime> SEND_TIME = createField("send_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "", new TimestampToLocalDateTimeConverter());

    /**
     * Create a <code>nutch.user_sms</code> table reference
     */
    public UserSms() {
        this("user_sms", null);
    }

    /**
     * Create an aliased <code>nutch.user_sms</code> table reference
     */
    public UserSms(String alias) {
        this(alias, USER_SMS);
    }

    private UserSms(String alias, Table<UserSmsRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserSms(String alias, Table<UserSmsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Nutch.NUTCH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserSmsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_SMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserSmsRecord> getPrimaryKey() {
        return Keys.KEY_USER_SMS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserSmsRecord>> getKeys() {
        return Arrays.<UniqueKey<UserSmsRecord>>asList(Keys.KEY_USER_SMS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserSms as(String alias) {
        return new UserSms(alias, this);
    }

    /**
     * Rename this table
     */
    public UserSms rename(String name) {
        return new UserSms(name, null);
    }
}
